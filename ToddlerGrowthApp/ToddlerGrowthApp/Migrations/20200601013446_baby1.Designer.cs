// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToddlerGrowthApp;

namespace ToddlerGrowthApp.Migrations
{
    [DbContext(typeof(ToddlerGrowthContext))]
    [Migration("20200601013446_baby1")]
    partial class baby1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ToddlerGrowthApp.Baby", b =>
                {
                    b.Property<int>("BabyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BabyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int>("BabySex")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("BirthHeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BirthPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BirthWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Bmi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BabyId");

                    b.HasIndex("UserEmail");

                    b.ToTable("Babies");
                });

            modelBuilder.Entity("ToddlerGrowthApp.SleepingTrack", b =>
                {
                    b.Property<int>("SleepingTrackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BabyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("SleepingTrackId");

                    b.HasIndex("BabyId");

                    b.ToTable("SleepingRecord");
                });

            modelBuilder.Entity("ToddlerGrowthApp.User", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ToddlerGrowthApp.Baby", b =>
                {
                    b.HasOne("ToddlerGrowthApp.User", null)
                        .WithMany("Babies")
                        .HasForeignKey("UserEmail");
                });

            modelBuilder.Entity("ToddlerGrowthApp.SleepingTrack", b =>
                {
                    b.HasOne("ToddlerGrowthApp.Baby", null)
                        .WithMany("SleepingTrack")
                        .HasForeignKey("BabyId");
                });
#pragma warning restore 612, 618
        }
    }
}
